(function () { var a, b, c, d, e = function (b, a) { function d() { this.constructor = b } for (var c in a) f.call(a, c) && (b[c] = a[c]); return d.prototype = a.prototype, b.prototype = new d, b.__super__ = a.prototype, b }, f = {}.hasOwnProperty; (d = function () { function a() { this.options_index = 0, this.parsed = [] } return a.prototype.add_node = function (a) { return "OPTGROUP" === a.nodeName.toUpperCase() ? this.add_group(a) : this.add_option(a) }, a.prototype.add_group = function (a) { var c, b, e, f, g, d; for (c = this.parsed.length, this.parsed.push({ array_index: c, group: !0, label: a.label, title: a.title ? a.title : void 0, children: 0, disabled: a.disabled, classes: a.className }), d = [], b = 0, e = (g = a.childNodes).length; b < e; b++)f = g[b], d.push(this.add_option(f, c, a.disabled)); return d }, a.prototype.add_option = function (a, b, c) { if ("OPTION" === a.nodeName.toUpperCase()) return "" !== a.text ? (null != b && (this.parsed[b].children += 1), this.parsed.push({ array_index: this.parsed.length, options_index: this.options_index, value: a.value, text: a.text, html: a.innerHTML, title: a.title ? a.title : void 0, selected: a.selected, disabled: !0 === c ? c : a.disabled, group_array_index: b, group_label: null != b ? this.parsed[b].label : null, classes: a.className, style: a.style.cssText })) : this.parsed.push({ array_index: this.parsed.length, options_index: this.options_index, empty: !0 }), this.options_index += 1 }, a }()).select_to_array = function (g) { var c, a, e, b, f; for (b = new d, a = 0, e = (f = g.childNodes).length; a < e; a++)c = f[a], b.add_node(c); return b.parsed }, b = function () { function a(c, b) { var d, e; this.form_field = c, this.options = null != b ? b : {}, this.label_click_handler = (d = this.label_click_handler, e = this, function () { return d.apply(e, arguments) }), a.browser_is_supported() && (this.is_multiple = this.form_field.multiple, this.set_default_text(), this.set_default_values(), this.setup(), this.set_up_html(), this.register_observers(), this.on_ready()) } return a.prototype.set_default_values = function () { var a, b; return this.click_test_action = (a = this, function (b) { return a.test_active_click(b) }), this.activate_action = (b = this, function (a) { return b.activate_field(a) }), this.active_field = !1, this.mouse_on_container = !1, this.results_showing = !1, this.result_highlighted = null, this.is_rtl = this.options.rtl || /\bchosen-rtl\b/.test(this.form_field.className), this.allow_single_deselect = null != this.options.allow_single_deselect && null != this.form_field.options[0] && "" === this.form_field.options[0].text && this.options.allow_single_deselect, this.disable_search_threshold = this.options.disable_search_threshold || 0, this.disable_search = this.options.disable_search || !1, this.enable_split_word_search = null == this.options.enable_split_word_search || this.options.enable_split_word_search, this.group_search = null == this.options.group_search || this.options.group_search, this.search_contains = this.options.search_contains || !1, this.single_backstroke_delete = null == this.options.single_backstroke_delete || this.options.single_backstroke_delete, this.max_selected_options = this.options.max_selected_options || 1 / 0, this.inherit_select_classes = this.options.inherit_select_classes || !1, this.display_selected_options = null == this.options.display_selected_options || this.options.display_selected_options, this.display_disabled_options = null == this.options.display_disabled_options || this.options.display_disabled_options, this.include_group_label_in_selected = this.options.include_group_label_in_selected || !1, this.max_shown_results = this.options.max_shown_results || Number.POSITIVE_INFINITY, this.case_sensitive_search = this.options.case_sensitive_search || !1, this.hide_results_on_select = null == this.options.hide_results_on_select || this.options.hide_results_on_select }, a.prototype.set_default_text = function () { return this.form_field.getAttribute("data-placeholder") ? this.default_text = this.form_field.getAttribute("data-placeholder") : this.is_multiple ? this.default_text = this.options.placeholder_text_multiple || this.options.placeholder_text || a.default_multiple_text : this.default_text = this.options.placeholder_text_single || this.options.placeholder_text || a.default_single_text, this.default_text = this.escape_html(this.default_text), this.results_none_found = this.form_field.getAttribute("data-no_results_text") || this.options.no_results_text || a.default_no_result_text }, a.prototype.choice_label = function (a) { return this.include_group_label_in_selected && null != a.group_label ? "<b class='group-name'>" + this.escape_html(a.group_label) + "</b>" + a.html : a.html }, a.prototype.mouse_enter = function () { return this.mouse_on_container = !0 }, a.prototype.mouse_leave = function () { return this.mouse_on_container = !1 }, a.prototype.input_focus = function (b) { if (this.is_multiple) { if (!this.active_field) { var a; return setTimeout((a = this, function () { return a.container_mousedown() }), 50) } } else if (!this.active_field) return this.activate_field() }, a.prototype.input_blur = function (b) { if (!this.mouse_on_container) { var a; return this.active_field = !1, setTimeout((a = this, function () { return a.blur_test() }), 100) } }, a.prototype.label_click_handler = function (a) { return this.is_multiple ? this.container_mousedown(a) : this.activate_field() }, a.prototype.results_option_build = function (f) { var c, a, d, b, g, h, e; for (c = "", e = 0, b = 0, g = (h = this.results_data).length; b < g && (a = h[b], d = "", "" !== (d = a.group ? this.result_add_group(a) : this.result_add_option(a)) && (e++, c += d), (null != f ? f.first : void 0) && (a.selected && this.is_multiple ? this.choice_build(a) : a.selected && !this.is_multiple && this.single_set_selected_text(this.choice_label(a))), !(e >= this.max_shown_results)); b++); return c }, a.prototype.result_add_option = function (a) { var b, c; return a.search_match && this.include_option_in_results(a) ? (b = [], a.disabled || a.selected && this.is_multiple || b.push("active-result"), !a.disabled || a.selected && this.is_multiple || b.push("disabled-result"), a.selected && b.push("result-selected"), null != a.group_array_index && b.push("group-option"), "" !== a.classes && b.push(a.classes), (c = document.createElement("li")).className = b.join(" "), a.style && (c.style.cssText = a.style), c.setAttribute("data-option-array-index", a.array_index), c.innerHTML = a.highlighted_html || a.html, a.title && (c.title = a.title), this.outerHTML(c)) : "" }, a.prototype.result_add_group = function (a) { var c, b; return (a.search_match || a.group_match) && a.active_options > 0 ? ((c = []).push("group-result"), a.classes && c.push(a.classes), (b = document.createElement("li")).className = c.join(" "), b.innerHTML = a.highlighted_html || this.escape_html(a.label), a.title && (b.title = a.title), this.outerHTML(b)) : "" }, a.prototype.results_update_field = function () { if (this.set_default_text(), this.is_multiple || this.results_reset_cleanup(), this.result_clear_highlight(), this.results_build(), this.results_showing) return this.winnow_results() }, a.prototype.reset_single_select_options = function () { var a, c, d, e, b; for (b = [], a = 0, c = (d = this.results_data).length; a < c; a++)(e = d[a]).selected ? b.push(e.selected = !1) : b.push(void 0); return b }, a.prototype.results_toggle = function () { return this.results_showing ? this.results_hide() : this.results_show() }, a.prototype.results_search = function (a) { return this.results_showing ? this.winnow_results() : this.results_show() }, a.prototype.winnow_results = function (h) { var i, j, f, k, a, l, b, m, n, _, c, g, d, o, e; for (this.no_results_clear(), _ = 0, i = (b = this.get_search_text()).replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&"), n = this.get_search_regex(i), f = 0, k = (m = this.results_data).length; f < k; f++)(a = m[f]).search_match = !1, c = null, g = null, a.highlighted_html = "", this.include_option_in_results(a) && (a.group && (a.group_match = !1, a.active_options = 0), null != a.group_array_index && this.results_data[a.group_array_index] && (0 === (c = this.results_data[a.group_array_index]).active_options && c.search_match && (_ += 1), c.active_options += 1), e = a.group ? a.label : a.text, a.group && !this.group_search || (g = this.search_string_match(e, n), a.search_match = null != g, a.search_match && !a.group && (_ += 1), a.search_match ? (b.length && (d = g.index, l = e.slice(0, d), j = e.slice(d, d + b.length), o = e.slice(d + b.length), a.highlighted_html = this.escape_html(l) + "<em>" + this.escape_html(j) + "</em>" + this.escape_html(o)), null != c && (c.group_match = !0)) : null != a.group_array_index && this.results_data[a.group_array_index].search_match && (a.search_match = !0))); return this.result_clear_highlight(), _ < 1 && b.length ? (this.update_results_content(""), this.no_results(b)) : (this.update_results_content(this.results_option_build()), (null != h ? h.skip_highlight : void 0) ? void 0 : this.winnow_results_set_highlight()) }, a.prototype.get_search_regex = function (b) { var c, a; return a = this.search_contains ? b : "(^|\\s|\\b)" + b + "[^\\s]*", this.enable_split_word_search || this.search_contains || (a = "^" + a), c = this.case_sensitive_search ? "" : "i", new RegExp(a, c) }, a.prototype.search_string_match = function (b, c) { var a; return a = c.exec(b), !this.search_contains && (null != a ? a[1] : void 0) && (a.index += 1), a }, a.prototype.choices_count = function () { var a, b, c; if (null != this.selected_option_count) return this.selected_option_count; for (this.selected_option_count = 0, a = 0, b = (c = this.form_field.options).length; a < b; a++)c[a].selected && (this.selected_option_count += 1); return this.selected_option_count }, a.prototype.choices_click = function (a) { if (a.preventDefault(), this.activate_field(), !this.results_showing && !this.is_disabled) return this.results_show() }, a.prototype.keydown_checker = function (a) { var c, b; switch (b = null != (c = a.which) ? c : a.keyCode, this.search_field_scale(), 8 !== b && this.pending_backstroke && this.clear_backstroke(), b) { case 8: this.backstroke_length = this.get_search_field_value().length; break; case 9: this.results_showing && !this.is_multiple && this.result_select(a), this.mouse_on_container = !1; break; case 13: case 27: this.results_showing && a.preventDefault(); break; case 32: this.disable_search && a.preventDefault(); break; case 38: a.preventDefault(), this.keyup_arrow(); break; case 40: a.preventDefault(), this.keydown_arrow() } }, a.prototype.keyup_checker = function (a) { var b, c; switch (c = null != (b = a.which) ? b : a.keyCode, this.search_field_scale(), c) { case 8: this.is_multiple && this.backstroke_length < 1 && this.choices_count() > 0 ? this.keydown_backstroke() : this.pending_backstroke || (this.result_clear_highlight(), this.results_search()); break; case 13: a.preventDefault(), this.results_showing && this.result_select(a); break; case 27: this.results_showing && this.results_hide(); break; case 9: case 16: case 17: case 18: case 38: case 40: case 91: break; default: this.results_search() } }, a.prototype.clipboard_event_checker = function (b) { if (!this.is_disabled) { var a; return setTimeout((a = this, function () { return a.results_search() }), 50) } }, a.prototype.container_width = function () { return null != this.options.width ? this.options.width : this.form_field.offsetWidth + "px" }, a.prototype.include_option_in_results = function (a) { return !(this.is_multiple && !this.display_selected_options && a.selected) && !(!this.display_disabled_options && a.disabled) && !a.empty }, a.prototype.search_results_touchstart = function (a) { return this.touch_started = !0, this.search_results_mouseover(a) }, a.prototype.search_results_touchmove = function (a) { return this.touch_started = !1, this.search_results_mouseout(a) }, a.prototype.search_results_touchend = function (a) { if (this.touch_started) return this.search_results_mouseup(a) }, a.prototype.outerHTML = function (a) { var b; return a.outerHTML ? a.outerHTML : ((b = document.createElement("div")).appendChild(a), b.innerHTML) }, a.prototype.get_single_html = function () { return '<a class="chosen-single chosen-default">\n  <span>' + this.default_text + '</span>\n  <div><b></b></div>\n</a>\n<div class="chosen-drop">\n  <div class="chosen-search">\n    <input class="chosen-search-input" type="text" autocomplete="off" />\n  </div>\n  <ul class="chosen-results"></ul>\n</div>' }, a.prototype.get_multi_html = function () { return '<ul class="chosen-choices">\n  <li class="search-field">\n    <input class="chosen-search-input" type="text" autocomplete="off" value="' + this.default_text + '" />\n  </li>\n</ul>\n<div class="chosen-drop">\n  <ul class="chosen-results"></ul>\n</div>' }, a.prototype.get_no_results_html = function (a) { return '<li class="no-results">\n  ' + this.results_none_found + " <span>" + this.escape_html(a) + "</span>\n</li>" }, a.browser_is_supported = function () { return "Microsoft Internet Explorer" === window.navigator.appName ? document.documentMode >= 8 : !(/iP(od|hone)/i.test(window.navigator.userAgent) || /IEMobile/i.test(window.navigator.userAgent) || /Windows Phone/i.test(window.navigator.userAgent) || /BlackBerry/i.test(window.navigator.userAgent) || /BB10/i.test(window.navigator.userAgent) || /Android.*Mobile/i.test(window.navigator.userAgent)) }, a.default_multiple_text = "Select Some Options", a.default_single_text = "Select an Option", a.default_no_result_text = "No results match", a }(), (a = jQuery).fn.extend({ chosen: function (d) { return b.browser_is_supported() ? this.each(function (f) { var e, b; b = (e = a(this)).data("chosen"), "destroy" !== d ? b instanceof c || e.data("chosen", new c(this, d)) : b instanceof c && b.destroy() }) : this } }), c = function (f) { function c() { return c.__super__.constructor.apply(this, arguments) } return e(c, b), c.prototype.setup = function () { return this.form_field_jq = a(this.form_field), this.current_selectedIndex = this.form_field.selectedIndex }, c.prototype.set_up_html = function () { var b, c; return (b = ["chosen-container"]).push("chosen-container-" + (this.is_multiple ? "multi" : "single")), this.inherit_select_classes && this.form_field.className && b.push(this.form_field.className), this.is_rtl && b.push("chosen-rtl"), c = { class: b.join(" "), title: this.form_field.title }, this.form_field.id.length && (c.id = this.form_field.id.replace(/[^\w]/g, "_") + "_chosen"), this.container = a("<div />", c), this.container.width(this.container_width()), this.is_multiple ? this.container.html(this.get_multi_html()) : this.container.html(this.get_single_html()), this.form_field_jq.hide().after(this.container), this.dropdown = this.container.find("div.chosen-drop").first(), this.search_field = this.container.find("input").first(), this.search_results = this.container.find("ul.chosen-results").first(), this.search_field_scale(), this.search_no_results = this.container.find("li.no-results").first(), this.is_multiple ? (this.search_choices = this.container.find("ul.chosen-choices").first(), this.search_container = this.container.find("li.search-field").first()) : (this.search_container = this.container.find("div.chosen-search").first(), this.selected_item = this.container.find(".chosen-single").first()), this.results_build(), this.set_tab_index(), this.set_label_behavior() }, c.prototype.on_ready = function () { return this.form_field_jq.trigger("chosen:ready", { chosen: this }) }, c.prototype.register_observers = function () { var a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, u, v, w, x; return this.container.on("touchstart.chosen", (a = this, function (b) { a.container_mousedown(b) })), this.container.on("touchend.chosen", (b = this, function (a) { b.container_mouseup(a) })), this.container.on("mousedown.chosen", (c = this, function (a) { c.container_mousedown(a) })), this.container.on("mouseup.chosen", (d = this, function (a) { d.container_mouseup(a) })), this.container.on("mouseenter.chosen", (e = this, function (a) { e.mouse_enter(a) })), this.container.on("mouseleave.chosen", (f = this, function (a) { f.mouse_leave(a) })), this.search_results.on("mouseup.chosen", (g = this, function (a) { g.search_results_mouseup(a) })), this.search_results.on("mouseover.chosen", (h = this, function (a) { h.search_results_mouseover(a) })), this.search_results.on("mouseout.chosen", (i = this, function (a) { i.search_results_mouseout(a) })), this.search_results.on("mousewheel.chosen DOMMouseScroll.chosen", (j = this, function (a) { j.search_results_mousewheel(a) })), this.search_results.on("touchstart.chosen", (k = this, function (a) { k.search_results_touchstart(a) })), this.search_results.on("touchmove.chosen", (l = this, function (a) { l.search_results_touchmove(a) })), this.search_results.on("touchend.chosen", (m = this, function (a) { m.search_results_touchend(a) })), this.form_field_jq.on("chosen:updated.chosen", (n = this, function (a) { n.results_update_field(a) })), this.form_field_jq.on("chosen:activate.chosen", (o = this, function (a) { o.activate_field(a) })), this.form_field_jq.on("chosen:open.chosen", (p = this, function (a) { p.container_mousedown(a) })), this.form_field_jq.on("chosen:close.chosen", (q = this, function (a) { q.close_field(a) })), this.search_field.on("blur.chosen", (r = this, function (a) { r.input_blur(a) })), this.search_field.on("keyup.chosen", (s = this, function (a) { s.keyup_checker(a) })), this.search_field.on("keydown.chosen", (t = this, function (a) { t.keydown_checker(a) })), this.search_field.on("focus.chosen", (u = this, function (a) { u.input_focus(a) })), this.search_field.on("cut.chosen", (v = this, function (a) { v.clipboard_event_checker(a) })), this.search_field.on("paste.chosen", (w = this, function (a) { w.clipboard_event_checker(a) })), this.is_multiple ? this.search_choices.on("click.chosen", (x = this, function (a) { x.choices_click(a) })) : this.container.on("click.chosen", function (a) { a.preventDefault() }) }, c.prototype.destroy = function () { return a(this.container[0].ownerDocument).off("click.chosen", this.click_test_action), this.form_field_label.length > 0 && this.form_field_label.off("click.chosen"), this.search_field[0].tabIndex && (this.form_field_jq[0].tabIndex = this.search_field[0].tabIndex), this.container.remove(), this.form_field_jq.removeData("chosen"), this.form_field_jq.show() }, c.prototype.search_field_disabled = function () { return this.is_disabled = this.form_field.disabled || this.form_field_jq.parents("fieldset").is(":disabled"), this.container.toggleClass("chosen-disabled", this.is_disabled), this.search_field[0].disabled = this.is_disabled, this.is_multiple || this.selected_item.off("focus.chosen", this.activate_field), this.is_disabled ? this.close_field() : this.is_multiple ? void 0 : this.selected_item.on("focus.chosen", this.activate_field) }, c.prototype.container_mousedown = function (b) { var c; if (!this.is_disabled) return !b || "mousedown" !== (c = b.type) && "touchstart" !== c || this.results_showing || b.preventDefault(), null != b && a(b.target).hasClass("search-choice-close") ? void 0 : (this.active_field ? !this.is_multiple && b && (a(b.target)[0] === this.selected_item[0] || a(b.target).parents("a.chosen-single").length) && (b.preventDefault(), this.results_toggle()) : (this.is_multiple && this.search_field.val(""), a(this.container[0].ownerDocument).on("click.chosen", this.click_test_action), this.results_show()), this.activate_field()) }, c.prototype.container_mouseup = function (a) { if ("ABBR" === a.target.nodeName && !this.is_disabled) return this.results_reset(a) }, c.prototype.search_results_mousewheel = function (a) { var b; if (a.originalEvent && (b = a.originalEvent.deltaY || -a.originalEvent.wheelDelta || a.originalEvent.detail), null != b) return a.preventDefault(), "DOMMouseScroll" === a.type && (b *= 40), this.search_results.scrollTop(b + this.search_results.scrollTop()) }, c.prototype.blur_test = function (a) { if (!this.active_field && this.container.hasClass("chosen-container-active")) return this.close_field() }, c.prototype.close_field = function () { return a(this.container[0].ownerDocument).off("click.chosen", this.click_test_action), this.active_field = !1, this.results_hide(), this.container.removeClass("chosen-container-active"), this.clear_backstroke(), this.show_search_field_default(), this.search_field_scale(), this.search_field.blur() }, c.prototype.activate_field = function () { if (!this.is_disabled) return this.container.addClass("chosen-container-active"), this.active_field = !0, this.search_field.val(this.search_field.val()), this.search_field.focus() }, c.prototype.test_active_click = function (c) { var b; return (b = a(c.target).closest(".chosen-container")).length && this.container[0] === b[0] ? this.active_field = !0 : this.close_field() }, c.prototype.results_build = function () { return this.parsing = !0, this.selected_option_count = null, this.results_data = d.select_to_array(this.form_field), this.is_multiple ? this.search_choices.find("li.search-choice").remove() : (this.single_set_selected_text(), this.disable_search || this.form_field.options.length <= this.disable_search_threshold ? (this.search_field[0].readOnly = !0, this.container.addClass("chosen-container-single-nosearch")) : (this.search_field[0].readOnly = !1, this.container.removeClass("chosen-container-single-nosearch"))), this.update_results_content(this.results_option_build({ first: !0 })), this.search_field_disabled(), this.show_search_field_default(), this.search_field_scale(), this.parsing = !1 }, c.prototype.result_do_highlight = function (d) { var a, b, c, e, f; if (d.length) { if (this.result_clear_highlight(), this.result_highlight = d, this.result_highlight.addClass("highlighted"), e = (c = parseInt(this.search_results.css("maxHeight"), 10)) + (f = this.search_results.scrollTop()), (a = (b = this.result_highlight.position().top + this.search_results.scrollTop()) + this.result_highlight.outerHeight()) >= e) return this.search_results.scrollTop(a - c > 0 ? a - c : 0); if (b < f) return this.search_results.scrollTop(b) } }, c.prototype.result_clear_highlight = function () { return this.result_highlight && this.result_highlight.removeClass("highlighted"), this.result_highlight = null }, c.prototype.results_show = function () { return this.is_multiple && this.max_selected_options <= this.choices_count() ? (this.form_field_jq.trigger("chosen:maxselected", { chosen: this }), !1) : (this.container.addClass("chosen-with-drop"), this.results_showing = !0, this.search_field.focus(), this.search_field.val(this.get_search_field_value()), this.winnow_results(), this.form_field_jq.trigger("chosen:showing_dropdown", { chosen: this })) }, c.prototype.update_results_content = function (a) { return this.search_results.html(a) }, c.prototype.results_hide = function () { return this.results_showing && (this.result_clear_highlight(), this.container.removeClass("chosen-with-drop"), this.form_field_jq.trigger("chosen:hiding_dropdown", { chosen: this })), this.results_showing = !1 }, c.prototype.set_tab_index = function (b) { var a; if (this.form_field.tabIndex) return a = this.form_field.tabIndex, this.form_field.tabIndex = -1, this.search_field[0].tabIndex = a }, c.prototype.set_label_behavior = function () { if (this.form_field_label = this.form_field_jq.parents("label"), !this.form_field_label.length && this.form_field.id.length && (this.form_field_label = a("label[for='" + this.form_field.id + "']")), this.form_field_label.length > 0) return this.form_field_label.on("click.chosen", this.label_click_handler) }, c.prototype.show_search_field_default = function () { return this.is_multiple && 1 > this.choices_count() && !this.active_field ? (this.search_field.val(this.default_text), this.search_field.addClass("default")) : (this.search_field.val(""), this.search_field.removeClass("default")) }, c.prototype.search_results_mouseup = function (b) { var c; if ((c = a(b.target).hasClass("active-result") ? a(b.target) : a(b.target).parents(".active-result").first()).length) return this.result_highlight = c, this.result_select(b), this.search_field.focus() }, c.prototype.search_results_mouseover = function (b) { if (a(b.target).hasClass("active-result") ? a(b.target) : a(b.target).parents(".active-result").first()) return }, c.prototype.search_results_mouseout = function (b) { if (a(b.target).hasClass("active-result") || a(b.target).parents(".active-result").first()) return this.result_clear_highlight() }, c.prototype.choice_build = function (c) { var b, d, e; return b = a("<li />", { class: "search-choice" }).html("<span>" + this.choice_label(c) + "</span>"), c.disabled ? b.addClass("search-choice-disabled") : ((d = a("<a />", { class: "search-choice-close", "data-option-array-index": c.array_index })).on("click.chosen", (e = this, function (a) { return e.choice_destroy_link_click(a) })), b.append(d)), this.search_container.before(b) }, c.prototype.choice_destroy_link_click = function (b) { if (b.preventDefault(), b.stopPropagation(), !this.is_disabled) return this.choice_destroy(a(b.target)) }, c.prototype.choice_destroy = function (a) { if (this.result_deselect(a[0].getAttribute("data-option-array-index"))) return this.active_field ? this.search_field.focus() : this.show_search_field_default(), this.is_multiple && this.choices_count() > 0 && this.get_search_field_value().length < 1 && this.results_hide(), a.parents("li").first().remove(), this.search_field_scale() }, c.prototype.results_reset = function () { if (this.reset_single_select_options(), this.form_field.options[0].selected = !0, this.single_set_selected_text(), this.show_search_field_default(), this.results_reset_cleanup(), this.trigger_form_field_change(), this.active_field) return this.results_hide() }, c.prototype.results_reset_cleanup = function () { return this.current_selectedIndex = this.form_field.selectedIndex, this.selected_item.find("abbr").remove() }, c.prototype.result_select = function (a) { var c, b; if (this.result_highlight) return c = this.result_highlight, this.result_clear_highlight(), this.is_multiple && this.max_selected_options <= this.choices_count() ? (this.form_field_jq.trigger("chosen:maxselected", { chosen: this }), !1) : (this.is_multiple ? c.removeClass("active-result") : this.reset_single_select_options(), c.addClass("result-selected"), (b = this.results_data[c[0].getAttribute("data-option-array-index")]).selected = !0, this.form_field.options[b.options_index].selected = !0, this.selected_option_count = null, this.is_multiple ? this.choice_build(b) : this.single_set_selected_text(this.choice_label(b)), this.is_multiple && (!this.hide_results_on_select || a.metaKey || a.ctrlKey) ? a.metaKey || a.ctrlKey ? this.winnow_results({ skip_highlight: !0 }) : (this.search_field.val(""), this.winnow_results()) : (this.results_hide(), this.show_search_field_default()), (this.is_multiple || this.form_field.selectedIndex !== this.current_selectedIndex) && this.trigger_form_field_change({ selected: this.form_field.options[b.options_index].value }), this.current_selectedIndex = this.form_field.selectedIndex, a.preventDefault(), this.search_field_scale()) }, c.prototype.single_set_selected_text = function (a) { return null == a && (a = this.default_text), a === this.default_text ? this.selected_item.addClass("chosen-default") : (this.single_deselect_control_build(), this.selected_item.removeClass("chosen-default")), this.selected_item.find("span").html(a) }, c.prototype.result_deselect = function (b) { var a; return a = this.results_data[b], !this.form_field.options[a.options_index].disabled && (a.selected = !1, this.form_field.options[a.options_index].selected = !1, this.selected_option_count = null, this.result_clear_highlight(), this.results_showing && this.winnow_results(), this.trigger_form_field_change({ deselected: this.form_field.options[a.options_index].value }), this.search_field_scale(), !0) }, c.prototype.single_deselect_control_build = function () { if (this.allow_single_deselect) return this.selected_item.find("abbr").length || this.selected_item.find("span").first().after('<abbr class="search-choice-close"></abbr>'), this.selected_item.addClass("chosen-single-with-deselect") }, c.prototype.get_search_field_value = function () { return this.search_field.val() }, c.prototype.get_search_text = function () { return a.trim(this.get_search_field_value()) }, c.prototype.escape_html = function (b) { return a("<div/>").text(b).html() }, c.prototype.winnow_results_set_highlight = function () { var a, b; if (null != (a = (b = this.is_multiple ? [] : this.search_results.find(".result-selected.active-result")).length ? b.first() : this.search_results.find(".active-result").first())) return this.result_do_highlight(a) }, c.prototype.no_results = function (b) { var a; return a = this.get_no_results_html(b), this.search_results.append(a), this.form_field_jq.trigger("chosen:no_results", { chosen: this }) }, c.prototype.no_results_clear = function () { return this.search_results.find(".no-results").remove() }, c.prototype.keydown_arrow = function () { var a; return this.results_showing && this.result_highlight ? (a = this.result_highlight.nextAll("li.active-result").first()) ? this.result_do_highlight(a) : void 0 : this.results_show() }, c.prototype.keyup_arrow = function () { var a; return this.results_showing || this.is_multiple ? this.result_highlight ? (a = this.result_highlight.prevAll("li.active-result")).length ? this.result_do_highlight(a.first()) : (this.choices_count() > 0 && this.results_hide(), this.result_clear_highlight()) : void 0 : this.results_show() }, c.prototype.keydown_backstroke = function () { var a; return this.pending_backstroke ? (this.choice_destroy(this.pending_backstroke.find("a").first()), this.clear_backstroke()) : (a = this.search_container.siblings("li.search-choice").last()).length && !a.hasClass("search-choice-disabled") ? (this.pending_backstroke = a, this.single_backstroke_delete ? this.keydown_backstroke() : this.pending_backstroke.addClass("search-choice-focus")) : void 0 }, c.prototype.clear_backstroke = function () { return this.pending_backstroke && this.pending_backstroke.removeClass("search-choice-focus"), this.pending_backstroke = null }, c.prototype.search_field_scale = function () { var b, c, f, g, e, h, d; if (this.is_multiple) { for (e = { position: "absolute", left: "-1000px", top: "-1000px", display: "none", whiteSpace: "pre" }, c = 0, f = (h = ["fontSize", "fontStyle", "fontWeight", "fontFamily", "lineHeight", "textTransform", "letterSpacing"]).length; c < f; c++)e[g = h[c]] = this.search_field.css(g); return (b = a("<div />").css(e)).text(this.get_search_field_value()), a("body").append(b), d = b.width() + 25, b.remove(), this.container.is(":visible") && (d = Math.min(this.container.outerWidth() - 10, d)), this.search_field.width(d) } }, c.prototype.trigger_form_field_change = function (a) { return this.form_field_jq.trigger("input", a), this.form_field_jq.trigger("change", a) }, c }() }).call(this)